1) 리터럴 표기법(literal)의 잇점은?

정수, 문자를 간단하게 표현할 수 있다.

2) 리스트, 튜플의 차이점?

새로운 요소를 추가/변경할 수 있는지 여부
리스트(가변) <-> 튜플(불변)

3) 유니버셜함수의 종류는?

단항 유니버셜 함수

abs, fabs : 각 원소(정수, 실수, 복소수)의 절대값을 구한다. 복소수가 아닌 경우에는 빠른 연산을 위해 fabs를 사용한다.
sqrt      : 각 원소의 제곱근을 계산한다.
square    : 각 원소의 제곱근을 계산한다.
Exp       : 각 원소에서 지수를 계산한다.
Log       : 자연 로그
sign      : 각 원소의 부호를 계산한다. 1(양수), 0(영), -1(음수)
ceil      : 각 원소의 소수자리를 올린다. 각 원소의 값보다 같거나 큰 정수 중 가장 작은 수를 반환한다.
floor     : 각 원소의 소수자리를 내린다. 각 원소의 값보다 작거나 같은 정수 중 가장 작은 수를 반환한다.
rint      : 각 원소의 소수자리를 반올림한다. dtype은 유지된다.
modf      : 각 원소의 몫과 나머지를 각각의 배열로 반환한다.
isnan     : 각각의 우너소가 숫자인지 아닌지를 나타내는 boolean 배열을 반환한다. 
cos(h), sin(h), tan(h): 삼각함수(쌍곡삼각).
arccos, arccosh, arcsin ... : 역삼각 함수

이항 유니버셜 함수

add       : 두 배열에서 같은 위치의 원소끼리 더 한다.
subtract  : 첫 번째 배열의 원소에서 두 번째 배열의 원소를 뺀다.
multiply  : 배열의 원소끼리 곱한다.
divide, floor_divide : 첫 번째 배열의 원소에서 두 번째 배열의 원소를 나눈다. floor_divide는 몫만 취한다.
power     : 첫 번째 배열의 원소에 두 번째 배열의 원소만큼 제곱한다.
maximum, fmax : 두 원소 중 큰 값을 반환한다. fmax는 NaN을 무시한다.
minimum, fmin : 각 배열의 두 원소 중 작은 값을 반환한다. fmin은 NaN을 무시한다.
mod       : 첫 번째 배열의 원소에 두 번째 배열의 원소를 나눈 나머지를 구한다.